name: Release on Tag

on:
  push:
    tags:
      - 'v*'  # Triggers the workflow on any tag that starts with 'v'

jobs:
  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build the application
      run: |
        pyinstaller --onefile --windowed \
          --add-data "client/assets:assets" \
          --add-data "client/version.txt:." \
          client/client.py

    - name: Archive build artifacts
      run: |
        zip -r app-linux.zip dist/
        sha256sum app-linux.zip > app-linux.zip.sha256

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app-linux
        path: |
          app-linux.zip
          app-linux.zip.sha256

  build-macos:
    name: Build on macOS
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build the application
      run: |
        pyinstaller --onefile --windowed \
          --add-data "client/assets:assets" \
          --add-data "client/version.txt:." \
          client/client.py

    - name: Archive build artifacts
      run: |
        zip -r app-macos.zip dist/
        shasum -a 256 app-macos.zip > app-macos.zip.sha256

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app-macos
        path: |
          app-macos.zip
          app-macos.zip.sha256

  build-windows:
    name: Build on Windows
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build the application
      run: |
        pyinstaller --onefile --windowed --add-data "client/assets;assets" --add-data "client/version.txt;." client\client.py

    - name: Archive build artifacts
      run: |
        Compress-Archive -Path dist\* -DestinationPath app-windows.zip
        Get-FileHash -Path app-windows.zip -Algorithm SHA256 | Select-Object -ExpandProperty Hash | Out-File -FilePath app-windows.zip.sha256

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app-windows
        path: |
          app-windows.zip
          app-windows.zip.sha256

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Download Linux Artifact
      uses: actions/download-artifact@v3
      with:
        name: app-linux

    - name: Download macOS Artifact
      uses: actions/download-artifact@v3
      with:
        name: app-macos

    - name: Download Windows Artifact
      uses: actions/download-artifact@v3
      with:
        name: app-windows

    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app-linux.zip
        asset_name: app-linux.zip
        asset_content_type: application/zip

    - name: Upload Linux Checksum Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app-linux.zip.sha256
        asset_name: app-linux.zip.sha256
        asset_content_type: text/plain

    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app-macos.zip
        asset_name: app-macos.zip
        asset_content_type: application/zip

    - name: Upload macOS Checksum Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app-macos.zip.sha256
        asset_name: app-macos.zip.sha256
        asset_content_type: text/plain

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app-windows.zip
        asset_name: app-windows.zip
        asset_content_type: application/zip

    - name: Upload Windows Checksum Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app-windows.zip.sha256
        asset_name: app-windows.zip.sha256
        asset_content_type: text/plain
